import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'hourglassSum' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts 2D_INTEGER_ARRAY arr as parameter.
     */

    public static int hourglassSum(List<List<Integer>> arr) {
    int suma = Integer.MIN_VALUE;//iniciamos la suma con el valor minimo posible 
    
        for (int i = 0; i <= 3; i++) {//recorremos la matriz arr, pero solo por 3 columnas y 3 filas 
            for (int j = 0; j <= 3; j++) {
                int reloj = arr.get(i).get(j) + arr.get(i).get(j + 1) + arr.get(i).get(j + 2)+ arr.get(i + 1).get(j + 1)+ arr.get(i + 2).get(j) + arr.get(i + 2).get(j + 1) + arr.get(i + 2).get(j + 2);//calculamos la suma en el reloj de arena centrandonos en las posiciones de i y j 

                if (reloj > suma) {//calculamos el valor de la suma y si el valor del reloj actualizamos el valor del reloj maximo 
                    suma = reloj;
                }

            }

        }

        return suma;//retornamos el valor maximo

    }

}



public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        List<List<Integer>> arr = new ArrayList<>();

        IntStream.range(0, 6).forEach(i -> {
            try {
                arr.add(
                    Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
                        .map(Integer::parseInt)
                        .collect(toList())
                );
            } catch (IOException ex) {
                throw new RuntimeException(ex);
            }
        });

        int result = Result.hourglassSum(arr);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
